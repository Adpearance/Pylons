// Block Grid Variables
$block-grid-elements: 12 !default;
$block-grid-default-spacing: rem-calc(20) !default;

$align-block-grid-to-grid: true;
@if $align-block-grid-to-grid {
	$block-grid-default-spacing: $column-gutter !default;
}

$block-grid-media-queries: true !default;

// Block Grid Mixins
@mixin block-grid(
	$per-row:false,
	$spacing:$block-grid-default-spacing,
	$include-spacing:true,
	$base-style:true) {

	@if $base-style {
		display: block;
		padding: 0;
		@if $align-block-grid-to-grid {
			margin: 0;
		} @else {
			margin: 0 (-$spacing/2);
		}
		@include clearfix;
		&>li {
			display: block;
			height: auto;
			float: left;
			@if $include-spacing {
				padding: 0 ($spacing/2) $spacing;
			}
		}
	}
	@if $per-row {
		&>li {
			width: 100%/$per-row;
			@if $include-spacing {
				padding: 0 ($spacing/2) $spacing;
			}
			&:nth-of-type(n) { clear: none; }
			&:nth-of-type(#{$per-row}n+1) { clear: both; }
			@if $align-block-grid-to-grid {
						@include block-grid-aligned($per-row, $spacing);
				 }
			}
	}
}

@mixin block-grid-aligned($per-row, $spacing) {
	@for $i from 1 through $block-grid-elements {
		@if $per-row >= $i {
			$grid-column: '+' + $i;
			@if $per-row == $i {
				$grid-column: '';
			}
			&:nth-child(#{$per-row}n#{unquote($grid-column)}) {
				padding-left: ($spacing - (($spacing / $per-row) * ($per-row - ($i - 1))));
				padding-right: ($spacing - (($spacing / $per-row) * $i));
			}
		}
	}
}

// Generate presentational markup for block grid.
@mixin block-grid-html-classes($size,$include-spacing) {
	@for $i from 1 through $block-grid-elements {
		.#{$size}-block-grid-#{($i)} {
			@include block-grid($i,$block-grid-default-spacing,$include-spacing,false);
		}
	}
}

[class*="block-grid-"] { @include block-grid; }

@media #{$small-up} {
	@include block-grid-html-classes($size:small,$include-spacing:false);
}

@media #{$medium-up} {
	@include block-grid-html-classes($size:medium,$include-spacing:false);
}

@media #{$large-up} {
	@include block-grid-html-classes($size:large,$include-spacing:false);
}
